<?xml version="1.0" encoding="UTF-8"?>
<plasterManifest xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1" schemaVersion="1.0">
  <metadata>
    <name>ModuleTemplate</name>
    <id>96ee808c-6bb7-4bb2-93ee-1c533fc77617</id>
    <version>1.0.0</version>
    <title>Plastiks Module Template</title>
    <description>Plaster template to create a module</description>
    <author>Plastikfan</author>
    <tags></tags>
  </metadata>
    <parameters>
      <parameter name='ModuleAuthor' type = 'user-fullname' prompt='Author' />
      <parameter name='ModuleName' type = 'text' prompt='Name of your module' />
      <parameter name='ModuleVersion' type = 'text' prompt='Version Number' default='0.0.0.1' />
      <parameter name='ModuleDesc' type = 'text' prompt='Brief Description of your module' />
      <parameter name='FunctionFolders' type = 'multichoice' prompt='Please select folders to include' default='0,1,2'>
        <choice label='&amp;Public' value='Public' help='Adds a public folder to module root'/>
        <choice label='&amp;Internal' value='Internal' help='Adds a internal folder to module root'/>
        <choice label='&amp;Classes' value='Classes' help='Adds a classes folder to module root'/>
        <choice label='&amp;Binaries' value='Binaries' help='Adds a binaries folder to module root'/>
        <choice label='&amp;DSCResources' value='DSCResources' help='Adds a DSCResource folder to module root'/>
      </parameter>
      <parameter name='Pester' type = 'choice' prompt='Include Pester Tests?' default='0'>
        <choice label='&amp;Yes' value='Yes' help='Adds a tests folder'/>
        <choice label='&amp;No' value='No' help='Does not add a tests folder'/>
      </parameter>
      <parameter name='Git' type = 'choice' prompt='Include Git Support?' default='0'>
        <choice label='&amp;Yes' value='Yes' help='Includes Git files'/>
        <choice label='&amp;No' value='No' help='Does not include git files'/>
      </parameter>
      <parameter name='InvokeBuild' type = 'choice' prompt='Include InvokeBuild Script' default='0'>
        <choice label='&amp;Yes' value='Yes' help='Adds an invoke build script at the root of module'/>
        <choice label='&amp;No' value='No' help='Does not include any invoke build scripts'/>
      </parameter>
    </parameters>
    <content>
      <message>Setting up your project</message>
      <newModuleManifest destination='${PLASTER_PARAM_ModuleName}/${PLASTER_PARAM_ModuleName}.psd1' moduleVersion='$PLASTER_PARAM_ModuleVersion' rootModule='${PLASTER_PARAM_ModuleName}.psm1' author='$PLASTER_PARAM_ModuleAuthor' description='$PLASTER_PARAM_ModuleDesc'/>
      <templateFile source='template.psm1' destination='${PLASTER_PARAM_ModuleName}/${PLASTER_PARAM_ModuleName}.psm1'/>
      <message>Creating folders for module: </message>
      <file source='' destination='${PLASTER_PARAM_ModuleName}/Public/' condition='$PLASTER_PARAM_FunctionFolders -contains "Public"'/>
      <file source='' destination='${PLASTER_PARAM_ModuleName}/Internal/' condition='$PLASTER_PARAM_FunctionFolders -contains "Internal"'/>
      <file source='' destination='${PLASTER_PARAM_ModuleName}/Classes/' condition='$PLASTER_PARAM_FunctionFolders -contains "Classes"'/>
      <file source='' destination='${PLASTER_PARAM_ModuleName}/Binaries/' condition='$PLASTER_PARAM_FunctionFolders -contains "Binaries"'/>
      <file source='' destination='${PLASTER_PARAM_ModuleName}/DSCResources/' condition='$PLASTER_PARAM_FunctionFolders -contains "DSCResources"'/>
      <message condition='$PLASTER_PARAM_Pester -eq "Yes"'>Setting up support for Pester</message>
      <requireModule name="Pester" minimumVersion="3.4.0" condition='$PLASTER_PARAM_Pester -eq "Yes"'/>
      <file source='' destination='${PLASTER_PARAM_ModuleName}/Tests/' condition='$PLASTER_PARAM_Pester -eq "Yes"'/>
      <file source='basicTest.ps1' destination='${PLASTER_PARAM_ModuleName}/Tests/${PLASTER_PARAM_ModuleName}.tests.ps1' condition='$PLASTER_PARAM_Pester -eq "Yes"'/>
      <message condition='$PlASTER_PARAM_Git -eq "Yes"'>Setting up support for Git</message>
      <templateFile source='README.md' destination='${PLASTER_PARAM_ModuleName}/README.md' condition='$PLASTER_PARAM_Git -eq "Yes"'/>
      <file source='.gitignore' destination='${PLASTER_PARAM_ModuleName}/.gitignore' condition='$PlASTER_PARAM_Git -eq "Yes"'/>
      <message condition='$PLASTER_PARAM_InvokeBuild -eq "Yes"'>Setting up support for Invoke-Build</message>
      <requireModule name="InvokeBuild" condition='$PLASTER_PARAM_InvokeBuild -eq "Yes"'/>
      <templateFile source='default.build.ps1' destination='${PLASTER_PARAM_ModuleName}/${PLASTER_PARAM_ModuleName}.build.ps1' condition='$PLASTER_PARAM_InvokeBuild -eq "Yes"'/>
    </content>
</plasterManifest>
